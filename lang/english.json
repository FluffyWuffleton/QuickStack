{
    "extends": "English",
    "dictionaries": {
        "modQuickStackMainDictionary": {
            "qsPrefix": "QuickStack:", // Prepended to initial search message.
            "qsPrefixShort": ">", // Prepended to results messages.
            "parenthetical": "({0})",
            "underline": "{_{0}_}",
            "colorMatchGroup": "{#--COLOR-METALLIC:{0}}",
            "colorPrefix": "{#--COLOR-COMMAND:{0}}",
            "concat": "{0}{ 1??}{ 2??}{ 3??}{ 4??}{ 5??}{ 6??}{ 7??}{ 8??}{ 9??}",

            /*
                Fragments used in result messages
            */
            "toX": "to{ 0??}",
            "fromX": "from{ 0??}",
            "yourInventory": "{#--COLOR-PEARL:your inventory}",

            "toTile": "onto {#--COLOR-BROWN:the ground}",
            "fromTile": "from {#--COLOR-BROWN:the ground}",
            "toUnknown": "to somewhere",
            "fromUnknown": "from somewhere",

            "XOutOfY": "{X}{Y?/}{Y??}{ name??}{ suffix??}", // Used in constructing a list of fully or partly moved item types ("5 arrows", "3/5 arrows")

            "allX": "all {0}", // All <plural-thing>
            "here": "here", // an item's immediate location
            "nearby": "nearby",
            
            /*
                Fragments used in action labels/descriptions
            */
            "onlyXType": "Only {0??similar items}{ 1??}",
            "allTypes": "All types",
            "mainInventory": "top-level inventory",
            "fullInventory": "full inventory",
            "deposit": "Deposit{ 0??} nearby{ 1??}", // "Deposit [optional: ITEM TYPE fragment] nearby [optional: TO/FROM LOCATION fragment]
            "collect": "Collect{ 0??}{ 1??}", // "Collect [optional: ITEM TYPE fragment] [optional: TO LOCATION fragment]

            /*
                Used in the slottable tooltips for certain item-actions, since tooltips aren't given context of the specific item being used
            */
            "thisContainer": "this container", // transfer from a particular container
            "likeContainers": "similar containers", // transfer from all held containers of the same type


            /*
                Options
            */
            "optionTopDown": "Top-down transfer priority",
            "optionKeepContainers": "Never move containers",
            "optionForbidTiles": "No ground-targetting",
            "optionTopDown_desc": "In transfers that operate across multiple nested source containers (e.g. \"Deposit from full inventory\"), what should be the order of transfers?\n- Bottom-Up: subcontainer content goes first.\n- Top-down: parent-container content goes first.\n\nThis mainly affects behavior when a subcontainer item itself is a valid match to be transferred...\n- Bottom-up means any valid bag contents will be transferred OUT of the bag before the bag itself is moved.\n- Top-down means the bag itself will be transferred (if possible), in which case its contents are untouched.\n\nNote that an equipped bag will never be transferred (though its contents might), and no bags will ever be transfered with the \"never move containers\" option set.",
            "optionMatchSimilar": "Match similar item groups...",
            "optionMatchSimilar_desc": "For any group selected below, all items within that group will be treated as a single type for stacking."
        },
        "modQuickStackGroupsDictionary": {
            // Custom groupings
            "Projectile": "Projectile",
            "ProjectileWeapon": "Projectile Weapon",
            "Equipment": "Equipment",
            "Edible": "Edible",
            "Raw": "Raw",
            "Medical": "Medical",
            "Potable": "Drinkable",
            "Unpotable": "Unpotable Water",
            "Rock": "Rock",
            "Poles": "Pole",
            "Fastening": "Fastening",
            "Needlework": "Needlework",
            "Seeds": "Seeds",
            "Fertilizing": "Fertilizer",
            "Paperwork": "Paperwork",
            "Woodwork": "Woodwork",

            "MatchGroupIncludes": "Group includes...",

            "ItemGroupX": "Group: \"{0}\"",
            "ItemTypeX": " Item: \"{0}\"",
            "Item": "item"
        },
        "message": {
            // When first receiving the keybind input.
            "modQuickStackSearch": "{prefix ??}Looking through containers...",

            // If there are no nearby containers with items matching your inventory. 
            // This should only happen when using a keybind, as none of the actions should be usable from menu/hotbar in this case.
            "modQuickStackNoMatch": "{#--TEXT-SECONDARY:{prefix??}{prefix? }None of {searchtarget??the nearby containers} are a good match.}",
            
            // If there are no nearby containers with items matching the selected type.
            //    {type}: Item type name.
            "modQuickStackNoTypeMatch": "{#--TEXT-SECONDARY:{prefix??}{prefix? }None of {searchtarget??the nearby containers} have any }{type??UNDEFINED}.",

            // Valid destination was found, and transfer was attempted...
            /*  Argument structure:
                {   
                    items:       ITranslationImpl[], // item-list fragments array, see above (itemAll and itemSome).
                    source:		 ItranslationImpl,   // source fragment
                    destination: ITranslationImpl,   // desination fragment
                	failed: {                  // Flags indicating the failure state of the transfer. Fields are undefined unless trueonly defined when true.
                        some?: true|undefined, // if some items were successsfully moved, but not all.
                        all?: true|undefined   // if no items were successfully moved.
                    } 
               }
            */
            // 
            "modQuickStackStackResult": "{#--COLOR-{failed.all?BAD:{failed.some?WARNING:COMMAND}}:{prefix??}}{prefix? }{#--COLOR-BAD:{failed.all?Tried}}{failed.all? moving:Moved} {items...} {source} {destination}{failed.some? before {#--COLOR-WARNING:it filled up}}{#--COLOR-BAD:{failed.all? but it was too full}}.",


            /************************************************************
                Menu and action labels
            */
            "modQuickStackQuickStackType": "Only {0??UNDEFINED}", // Submenu label
            "modQuickStackQuickStackAll": "All types", // Submenu label


            // "Deposit{ OPTIONAL_ITEMTYPE}{ OPTIONAL_ORIGIN_STRING}"
            "modQuickStackDeposit": "Deposit{ 0??}{ 1??}",

            // Restack all to <SOMEWHERE> from nearby containers
            "modQuickStackRestockAllFrom": "Restock all {0}",
            // Restock item type to <SOMEWHERE> from nearby containers
            "modQuickStackRestockTypeFrom": "Restock {0} {0}",


            // The word 'from' with optional location.
            "modQuickStackFrom": "from{ 0??}",

            // The word 'to' with optional location.
            "modQuickStackTo": "to{ 0??}",

            // definitions of SOMEWHERE...
            "modQuickStackAllX": "all {0}", // All <plural-thing>
            "modQuickStackMain": "top-level inventory", // main inventory only
            "modQuickStackHere": "here", // an item's immediate location
            "modQuickStackSelf": "full inventory", // Full inventory recursively 
            "modQuickStackSub": "this container", // specific subcontainer  // used in the slottable tooltips for certain item-actions, since
            "modQuickStackAlike": "similar containers", // all like subcontainers // tooltips aren't given context of the specific item being used..


            // Stack all from nearby to inventory
            "modQuickStackAllNearbyMain": [
                "Restock",
                "Restock main inventory from nearby containers."
            ],
            "modQuickStackAllNearbySub": [
                "Restock {0}",
                "Restock the contents of {0} from nearby containers."
            ],
            "modQuickStackAllNearbySelf": [
                "Restock (+bags)",
                "Restock all inventories (main, bags, quivers, etc) from nearby containers."
            ],
            // Stack type from nearby to inventory
            "modQuickStackTypeNearbyMain": [
                "Restock inventory with {0}",
                "Restock main inventory with {0} from nearby containers."
            ],
            "modQuickStackTypeNearbySub": [
                "Restock {0} with {1}",
                "Restock {0} with {1} from nearby containers."
            ]
        },
        "bindable": {
            "modQuickStackStackAllMainNearby": "Deposit nearby from main inventory",
            "modQuickStackStackAllSelfNearby": "Deposit nearby from inventory and bags",
            "modQuickStackStackAllNearbyMain": "Restock main inventory from nearby",
            "modQuickStackStackAllNearbySelf": "Restock main inventory and bags from nearby",
            "modQuickStackAll": "Move all item types",
            "modQuickStackType": "Move only selected type",
            "modQuickStackSelf": "Target full inventory",
            "modQuickStackMain": "Target top-level inventory",
            "modQuickStackSub": "Target a held container",
            "modQuickStackAlike": "Target all similar containers",
            "modQuickStackHere": "Target selected item's location",
            "modQuickStackNearby": "Target nearby storage"
        }
    }
}